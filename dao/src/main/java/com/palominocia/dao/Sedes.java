package com.palominocia.dao;

import org.greenrobot.greendao.annotation.*;

import java.util.List;
import com.palominocia.dao.DaoSession;
import org.greenrobot.greendao.DaoException;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT. Enable "keep" sections if you want to edit.

/**
 * Entity mapped to table "SEDES".
 */
@Entity(active = true)
public class Sedes {

    @Id(autoincrement = true)
    private long codigoSede;
    private String NombreSede;
    private String DireccionSede;
    private String TelefonoSede;

    /** Used to resolve relations */
    @Generated
    private transient DaoSession daoSession;

    /** Used for active entity operations. */
    @Generated
    private transient SedesDao myDao;

    @ToMany(joinProperties = {
        @JoinProperty(name = "codigoSede", referencedName = "codigoSede")
    })
    private List<sedeClinica> codigoSede1;

    @Generated
    public Sedes() {
    }

    public Sedes(long codigoSede) {
        this.codigoSede = codigoSede;
    }

    @Generated
    public Sedes(long codigoSede, String NombreSede, String DireccionSede, String TelefonoSede) {
        this.codigoSede = codigoSede;
        this.NombreSede = NombreSede;
        this.DireccionSede = DireccionSede;
        this.TelefonoSede = TelefonoSede;
    }

    /** called by internal mechanisms, do not call yourself. */
    @Generated
    public void __setDaoSession(DaoSession daoSession) {
        this.daoSession = daoSession;
        myDao = daoSession != null ? daoSession.getSedesDao() : null;
    }

    public long getCodigoSede() {
        return codigoSede;
    }

    public void setCodigoSede(long codigoSede) {
        this.codigoSede = codigoSede;
    }

    public String getNombreSede() {
        return NombreSede;
    }

    public void setNombreSede(String NombreSede) {
        this.NombreSede = NombreSede;
    }

    public String getDireccionSede() {
        return DireccionSede;
    }

    public void setDireccionSede(String DireccionSede) {
        this.DireccionSede = DireccionSede;
    }

    public String getTelefonoSede() {
        return TelefonoSede;
    }

    public void setTelefonoSede(String TelefonoSede) {
        this.TelefonoSede = TelefonoSede;
    }

    /** To-many relationship, resolved on first access (and after reset). Changes to to-many relations are not persisted, make changes to the target entity. */
    @Generated
    public List<sedeClinica> getCodigoSede1() {
        if (codigoSede1 == null) {
            __throwIfDetached();
            sedeClinicaDao targetDao = daoSession.getSedeClinicaDao();
            List<sedeClinica> codigoSede1New = targetDao._querySedes_CodigoSede1(codigoSede);
            synchronized (this) {
                if(codigoSede1 == null) {
                    codigoSede1 = codigoSede1New;
                }
            }
        }
        return codigoSede1;
    }

    /** Resets a to-many relationship, making the next get call to query for a fresh result. */
    @Generated
    public synchronized void resetCodigoSede1() {
        codigoSede1 = null;
    }

    /**
    * Convenient call for {@link org.greenrobot.greendao.AbstractDao#delete(Object)}.
    * Entity must attached to an entity context.
    */
    @Generated
    public void delete() {
        __throwIfDetached();
        myDao.delete(this);
    }

    /**
    * Convenient call for {@link org.greenrobot.greendao.AbstractDao#update(Object)}.
    * Entity must attached to an entity context.
    */
    @Generated
    public void update() {
        __throwIfDetached();
        myDao.update(this);
    }

    /**
    * Convenient call for {@link org.greenrobot.greendao.AbstractDao#refresh(Object)}.
    * Entity must attached to an entity context.
    */
    @Generated
    public void refresh() {
        __throwIfDetached();
        myDao.refresh(this);
    }

    @Generated
    private void __throwIfDetached() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }
    }

}
